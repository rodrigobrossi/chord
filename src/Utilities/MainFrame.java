package Utilities;

import Application.Node;
import Application.FileSearch;
import Application.FIDEntry;
import FileServices.RequestFile;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.PrintStream;
import java.net.InetAddress;
import java.rmi.RemoteException;
import java.util.Timer;
import java.util.TimerTask;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.text.DefaultCaret;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author gasparosoft
 */
public class MainFrame extends javax.swing.JFrame
{

	private final Command com;
	private Node node;
	private UpdateTaskLogs taskLogs;

	private class UpdateTaskLogs extends TimerTask
	{

		public void run()
		{

			Log log = Log.getLogger();

			switch (log.getType())
			{
			case Log.ERROR:
				MainFrame.jTextAreaDownR.append(log.getMessage() + "\n");
				break;
			case Log.WARNING:
				MainFrame.jTextAreaUpR.append(log.getMessage() + "\n");
				break;
			case Log.INFORMATION:
				MainFrame.jTextAreaUpL.append(log.getMessage() + "\n");
				break;
			case Log.TABLES:
				MainFrame.jTextAreaDownL.append(log.getMessage() + "\n");
				break;
			default:
				MainFrame.jTextAreaDownR.append("Error in Log\n");
			}

		}
		//Log.getLogger().
	}

	/** Creates new form MainFrame */
	public MainFrame(final Node node, int timeIntervalGui, int timeIntervalLogs) throws RemoteException
	{

		initComponents();

		DefaultCaret caretUpL = (DefaultCaret) jTextAreaUpL.getCaret();
		DefaultCaret caretUpR = (DefaultCaret) jTextAreaUpR.getCaret();
		DefaultCaret caretDownL = (DefaultCaret) jTextAreaDownL.getCaret();
		DefaultCaret caretDownR = (DefaultCaret) jTextAreaDownR.getCaret();

		caretUpL.setUpdatePolicy(DefaultCaret.ALWAYS_UPDATE);
		caretUpR.setUpdatePolicy(DefaultCaret.ALWAYS_UPDATE);
		caretDownL.setUpdatePolicy(DefaultCaret.ALWAYS_UPDATE);
		caretDownR.setUpdatePolicy(DefaultCaret.ALWAYS_UPDATE);

		jTextAreaUpL.setEditable(false);
		jTextAreaUpR.setEditable(false);
		jTextAreaCLI.setEditable(false);
		jTextAreaDownL.setEditable(false);
		jTextAreaDownR.setEditable(false);


		jTextAreaUpL.setToolTipText("Information");
		jTextAreaUpR.setToolTipText("Warnings");
		jTextAreaDownL.setToolTipText("Tables");
		jTextAreaDownR.setToolTipText("Errors");


		this.setTitle("ChordFPG 1.0 - " + node.getLocalID().toString());
		setIconImage(Toolkit.getDefaultToolkit().getImage(this.getClass().getResource("/Utilities/resources/logo2.gif")));

		this.node = node;

		Timer timer1 = new Timer();
		taskLogs = new UpdateTaskLogs();
		timer1.scheduleAtFixedRate(taskLogs, 0, timeIntervalLogs);

		com = new Command();

		Dimension screen = Toolkit.getDefaultToolkit().getScreenSize();
		int x = (screen.width / 2) - (this.getWidth() / 2);
		int y = (screen.height / 2) - (this.getHeight() / 2);
		this.setLocation(x,y);
	}

	/** This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
	private void initComponents()
	{

		jTabbedPane = new javax.swing.JTabbedPane();
		jPanelStats = new javax.swing.JPanel();
		jScrollPaneUpL = new javax.swing.JScrollPane();
		jTextAreaUpL = new javax.swing.JTextArea();
		jScrollPaneUpR = new javax.swing.JScrollPane();
		jTextAreaUpR = new javax.swing.JTextArea();
		jScrollPaneDownL = new javax.swing.JScrollPane();
		jTextAreaDownL = new javax.swing.JTextArea();
		jScrollPaneDownR = new javax.swing.JScrollPane();
		jTextAreaDownR = new javax.swing.JTextArea();
		jLabel1 = new javax.swing.JLabel();
		jTextField1 = new javax.swing.JTextField();
		jLabel2 = new javax.swing.JLabel();
		jLabel3 = new javax.swing.JLabel();
		jTextField2 = new javax.swing.JTextField();
		jTextField3 = new javax.swing.JTextField();
		jPanelCLI = new javax.swing.JPanel();
		jLayeredPane1 = new javax.swing.JLayeredPane();
		jScrollPaneCLI = new javax.swing.JScrollPane();
		jTextAreaCLI = new javax.swing.JTextArea();
		jTextField = new javax.swing.JTextField();
		jMenuBar = new javax.swing.JMenuBar();
		jMenuFile = new javax.swing.JMenu();
		saveAsItem = new javax.swing.JMenuItem();
		jSeparator3 = new javax.swing.JPopupMenu.Separator();
		nodeViewerItem = new javax.swing.JMenuItem();
		chordViewerItem = new javax.swing.JMenuItem();
		jSeparator1 = new javax.swing.JPopupMenu.Separator();
		exitItem = new javax.swing.JMenuItem();
		jMenuHelp = new javax.swing.JMenu();
		helpContentsItem = new javax.swing.JMenuItem();
		jSeparator2 = new javax.swing.JPopupMenu.Separator();
		aboutItem = new javax.swing.JMenuItem();

		setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
		setResizable(false);
		addWindowListener(new java.awt.event.WindowAdapter()
		{
			public void windowClosing(java.awt.event.WindowEvent evt)
			{
				formWindowClosing(evt);
			}
		});

		jTextAreaUpL.setColumns(20);
		jTextAreaUpL.setRows(5);
		jScrollPaneUpL.setViewportView(jTextAreaUpL);

		jTextAreaUpR.setColumns(20);
		jTextAreaUpR.setRows(5);
		jScrollPaneUpR.setViewportView(jTextAreaUpR);

		jTextAreaDownL.setColumns(20);
		jTextAreaDownL.setRows(5);
		jScrollPaneDownL.setViewportView(jTextAreaDownL);

		jTextAreaDownR.setColumns(20);
		jTextAreaDownR.setRows(5);
		jScrollPaneDownR.setViewportView(jTextAreaDownR);

		jLabel1.setText("Node's ID");

		jTextField1.setText("jTextField1");
		jTextField1.addActionListener(new java.awt.event.ActionListener()
		{
			public void actionPerformed(java.awt.event.ActionEvent evt)
			{
				jTextField1ActionPerformed(evt);
			}
		});

		jLabel2.setText("Successor's ID");

		jLabel3.setText("Predecessor's ID");

		jTextField2.setText("jTextField2");

		jTextField3.setText("jTextField3");

		javax.swing.GroupLayout jPanelStatsLayout = new javax.swing.GroupLayout(jPanelStats);
		jPanelStats.setLayout(jPanelStatsLayout);
		jPanelStatsLayout.setHorizontalGroup(
		    jPanelStatsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
		    .addGroup(jPanelStatsLayout.createSequentialGroup()
		              .addGroup(jPanelStatsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
		                        .addGroup(jPanelStatsLayout.createSequentialGroup()
		                                  .addContainerGap()
		                                  .addGroup(jPanelStatsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
		                                          .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelStatsLayout.createSequentialGroup()
		                                                  .addComponent(jScrollPaneUpL, javax.swing.GroupLayout.PREFERRED_SIZE, 322, javax.swing.GroupLayout.PREFERRED_SIZE)
		                                                  .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
		                                                  .addComponent(jScrollPaneUpR, javax.swing.GroupLayout.PREFERRED_SIZE, 322, javax.swing.GroupLayout.PREFERRED_SIZE))
		                                          .addGroup(jPanelStatsLayout.createSequentialGroup()
		                                                  .addComponent(jScrollPaneDownL, javax.swing.GroupLayout.PREFERRED_SIZE, 322, javax.swing.GroupLayout.PREFERRED_SIZE)
		                                                  .addGap(18, 18, 18)
		                                                  .addComponent(jScrollPaneDownR, javax.swing.GroupLayout.PREFERRED_SIZE, 322, javax.swing.GroupLayout.PREFERRED_SIZE))))
		                        .addGroup(jPanelStatsLayout.createSequentialGroup()
		                                  .addGap(27, 27, 27)
		                                  .addGroup(jPanelStatsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
		                                          .addComponent(jLabel2)
		                                          .addComponent(jLabel1)
		                                          .addComponent(jLabel3))
		                                  .addGap(18, 18, 18)
		                                  .addGroup(jPanelStatsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
		                                          .addComponent(jTextField3)
		                                          .addComponent(jTextField2)
		                                          .addComponent(jTextField1, javax.swing.GroupLayout.DEFAULT_SIZE, 161, Short.MAX_VALUE))))
		              .addContainerGap(26, Short.MAX_VALUE))
		);
		jPanelStatsLayout.setVerticalGroup(
		    jPanelStatsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
		    .addGroup(jPanelStatsLayout.createSequentialGroup()
		              .addContainerGap()
		              .addGroup(jPanelStatsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
		                        .addComponent(jScrollPaneUpL)
		                        .addComponent(jScrollPaneUpR, javax.swing.GroupLayout.DEFAULT_SIZE, 174, Short.MAX_VALUE))
		              .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
		              .addGroup(jPanelStatsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
		                        .addComponent(jScrollPaneDownR)
		                        .addComponent(jScrollPaneDownL, javax.swing.GroupLayout.DEFAULT_SIZE, 179, Short.MAX_VALUE))
		              .addGap(49, 49, 49)
		              .addGroup(jPanelStatsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
		                        .addComponent(jLabel1)
		                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
		              .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
		              .addGroup(jPanelStatsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
		                        .addComponent(jLabel2)
		                        .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
		              .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
		              .addGroup(jPanelStatsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
		                        .addComponent(jLabel3)
		                        .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
		              .addContainerGap(16, Short.MAX_VALUE))
		);

		jTabbedPane.addTab("Stats", jPanelStats);

		jTextAreaCLI.setColumns(5);
		jTextAreaCLI.setEditable(false);
		jTextAreaCLI.setRows(5);
		jTextAreaCLI.setText("type \"help\" to see the full list of commands");
		jScrollPaneCLI.setViewportView(jTextAreaCLI);

		jScrollPaneCLI.setBounds(0, 10, 660, 300);
		jLayeredPane1.add(jScrollPaneCLI, javax.swing.JLayeredPane.DEFAULT_LAYER);

		jTextField.addActionListener(new java.awt.event.ActionListener()
		{
			public void actionPerformed(java.awt.event.ActionEvent evt)
			{
				jTextFieldActionPerformed(evt);
			}
		});
		jTextField.setBounds(0, 320, 660, -1);
		jLayeredPane1.add(jTextField, javax.swing.JLayeredPane.DEFAULT_LAYER);

		javax.swing.GroupLayout jPanelCLILayout = new javax.swing.GroupLayout(jPanelCLI);
		jPanelCLI.setLayout(jPanelCLILayout);
		jPanelCLILayout.setHorizontalGroup(
		    jPanelCLILayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
		    .addGroup(jPanelCLILayout.createSequentialGroup()
		              .addContainerGap()
		              .addComponent(jLayeredPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 676, Short.MAX_VALUE)
		              .addContainerGap())
		);
		jPanelCLILayout.setVerticalGroup(
		    jPanelCLILayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
		    .addGroup(jPanelCLILayout.createSequentialGroup()
		              .addContainerGap(182, Short.MAX_VALUE)
		              .addComponent(jLayeredPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 365, javax.swing.GroupLayout.PREFERRED_SIZE))
		);

		jTabbedPane.addTab("CLI", jPanelCLI);

		jMenuFile.setText("File");

		saveAsItem.setText("Save As...");
		saveAsItem.addActionListener(new java.awt.event.ActionListener()
		{
			public void actionPerformed(java.awt.event.ActionEvent evt)
			{
				saveAsItemActionPerformed(evt);
			}
		});
		jMenuFile.add(saveAsItem);
		jMenuFile.add(jSeparator3);

		nodeViewerItem.setText("NodeViewer");
		nodeViewerItem.addActionListener(new java.awt.event.ActionListener()
		{
			public void actionPerformed(java.awt.event.ActionEvent evt)
			{
				nodeViewerItemActionPerformed(evt);
			}
		});
		jMenuFile.add(nodeViewerItem);

		chordViewerItem.setText("Chord Viewer");
		chordViewerItem.addActionListener(new java.awt.event.ActionListener()
		{
			public void actionPerformed(java.awt.event.ActionEvent evt)
			{
				chordViewerItemActionPerformed(evt);
			}
		});
		jMenuFile.add(chordViewerItem);
		jMenuFile.add(jSeparator1);

		exitItem.setText("Exit");
		exitItem.addActionListener(new java.awt.event.ActionListener()
		{
			public void actionPerformed(java.awt.event.ActionEvent evt)
			{
				exitItemActionPerformed(evt);
			}
		});
		jMenuFile.add(exitItem);

		jMenuBar.add(jMenuFile);

		jMenuHelp.setText("Help");

		helpContentsItem.setText("Help Contents");
		helpContentsItem.addActionListener(new java.awt.event.ActionListener()
		{
			public void actionPerformed(java.awt.event.ActionEvent evt)
			{
				helpContentsItemActionPerformed(evt);
			}
		});
		jMenuHelp.add(helpContentsItem);
		jMenuHelp.add(jSeparator2);

		aboutItem.setText("About");
		aboutItem.addActionListener(new java.awt.event.ActionListener()
		{
			public void actionPerformed(java.awt.event.ActionEvent evt)
			{
				aboutItemActionPerformed(evt);
			}
		});
		jMenuHelp.add(aboutItem);

		jMenuBar.add(jMenuHelp);

		setJMenuBar(jMenuBar);

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
		getContentPane().setLayout(layout);
		layout.setHorizontalGroup(
		    layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
		    .addGroup(layout.createSequentialGroup()
		              .addContainerGap()
		              .addComponent(jTabbedPane, javax.swing.GroupLayout.PREFERRED_SIZE, 704, javax.swing.GroupLayout.PREFERRED_SIZE)
		              .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
		);
		layout.setVerticalGroup(
		    layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
		    .addGroup(layout.createSequentialGroup()
		              .addContainerGap()
		              .addComponent(jTabbedPane, javax.swing.GroupLayout.DEFAULT_SIZE, 578, Short.MAX_VALUE))
		);

		pack();
	}// </editor-fold>//GEN-END:initComponents

	private void jTextFieldActionPerformed(java.awt.event.ActionEvent evt)  //GEN-FIRST:event_jTextFieldActionPerformed
	{

		/* if (jTextField.getText().equals("")) {
		jTextField.setText("");
		} else if (jTextField.getText().equals(Command.CREATE_NODE)) {
		jTextField.setText("");
		node = com.createNode();
		} else if (jTextField.getText().equals(Command.HELP)) {
		jTextField.setText("");
		jTextAreaCLI.setText(com.getHelp());
		} else if (jTextField.getText().equals(Command.QUIT_APPLICATION)) {
		com.disconnect();
		} else if (jTextField.getText().equals(Command.CLEAR)) {
		jTextField.setText("");
		jTextAreaCLI.setText("");
		} else {
		String uCom = jTextField.getText();
		jTextField.setText("");
		jTextAreaCLI.setText(uCom + ": command not found");
		}
		 */

		if(jTextField.getText().startsWith("GET"))
		{
			try
			{
				fetchFile(jTextField.getText().substring(3).trim());
			}
			catch (IOException ex)
			{
				Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
			}
		}
	}//GEN-LAST:event_jTextFieldActionPerformed

	private void fetchFile(String filename) throws IOException, java.net.UnknownHostException
	{
		FileSearch fs = new FileSearch();
		FIDEntry entry;
		entry = fs.searchFile(filename, this.node);
		RequestFile.getFile(InetAddress.getByName(entry.getIp().substring(1)), entry.getFSPort(), filename);

	}
	private void exitItemActionPerformed(java.awt.event.ActionEvent evt)  //GEN-FIRST:event_exitItemActionPerformed
	{

		com.disconnect();
	}//GEN-LAST:event_exitItemActionPerformed

	private void formWindowClosing(java.awt.event.WindowEvent evt)  //GEN-FIRST:event_formWindowClosing
	{

		com.disconnect();
	}//GEN-LAST:event_formWindowClosing

	private void chordViewerItemActionPerformed(java.awt.event.ActionEvent evt)  //GEN-FIRST:event_chordViewerItemActionPerformed
	{
		// TODO add your handling code here:
		ChordViewer viewer;
		try
		{
			viewer = new ChordViewer(node);
			viewer.create();
		}
		catch (RemoteException ex)
		{
			Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
		}

	}//GEN-LAST:event_chordViewerItemActionPerformed

	private void saveAsItemActionPerformed(java.awt.event.ActionEvent evt)  //GEN-FIRST:event_saveAsItemActionPerformed
	{
		// TODO add your handling code here:
		String message = "";
		String fileName;

		JFileChooser fileChooser = new JFileChooser();
		fileChooser.setAcceptAllFileFilterUsed(false);
		int option;

		if (jTabbedPane.getSelectedIndex() == 0)
		{
			String seperator = "-------------------------------------\n";
			String[] log = MainFrame.getWholeLog();

			message = seperator + "INFORMATION\n" + seperator + log[0]
			          + "\n" + seperator + "TABLES\n" + seperator + log[1]
			          + "\n" + seperator + "WARNINGS\n" + seperator + log[2]
			          + "\n" + seperator + "ERRORS\n" + seperator + log[3];

		}
		else if (jTabbedPane.getSelectedIndex() == 1)
		{

			message = jTextAreaCLI.getText();
		}
		else
		{
			JOptionPane.showMessageDialog(MainFrame.this.getRootPane(), "An uknown problem occurred.\nPlease try again later.", "ChordFPG said: ", JOptionPane.ERROR_MESSAGE);
		}

		option = fileChooser.showSaveDialog(MainFrame.this.rootPane);

		if (option == JFileChooser.APPROVE_OPTION)
		{
			File file = fileChooser.getSelectedFile();
			if (!file.getAbsolutePath().endsWith(".txt"))
			{
				fileName = file.getAbsolutePath() + ".txt";
			}
			else
			{
				fileName = file.getAbsolutePath();
			}

			try
			{
				file = new File(fileName);
				FileOutputStream f = new FileOutputStream(file);
				PrintStream p = new PrintStream(f);
				p.print(message);


			}
			catch (IOException ex)
			{
				JOptionPane.showMessageDialog(MainFrame.this.getRootPane(), "A problem occurred while atempting to write the file.\nPlease try again later.", "ChordFPG said:", JOptionPane.ERROR_MESSAGE);
			}


			JOptionPane.showMessageDialog(MainFrame.this.getRootPane(), "The file has been saved to:\n" + fileName, "ChordFPG said:", JOptionPane.INFORMATION_MESSAGE);
		}
	}//GEN-LAST:event_saveAsItemActionPerformed

	private void helpContentsItemActionPerformed(java.awt.event.ActionEvent evt)  //GEN-FIRST:event_helpContentsItemActionPerformed
	{
		Help helpBox = new Help();
	}//GEN-LAST:event_helpContentsItemActionPerformed

	public static String[] getWholeLog()
	{

		String[] log = new String[4];
		log[0] = jTextAreaUpL.getText();
		log[1] = jTextAreaDownL.getText();
		log[2] = jTextAreaUpR.getText();
		log[3] = jTextAreaDownR.getText();

		return log;
	}

	private void aboutItemActionPerformed(java.awt.event.ActionEvent evt)  //GEN-FIRST:event_aboutItemActionPerformed
	{
		aboutItemBox aboutBox = new aboutItemBox();
	}//GEN-LAST:event_aboutItemActionPerformed

	private void nodeViewerItemActionPerformed(java.awt.event.ActionEvent evt)  //GEN-FIRST:event_nodeViewerItemActionPerformed
	{
		try
		{
			// TODO add your handling code here:
			NodeViewer viewer = new NodeViewer(node);
		}
		catch (RemoteException ex)
		{
			Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
		}


	}//GEN-LAST:event_nodeViewerItemActionPerformed

	private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jTextField1ActionPerformed
	{
		//GEN-HEADEREND:event_jTextField1ActionPerformed
		// TODO add your handling code here:
	}//GEN-LAST:event_jTextField1ActionPerformed

	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JMenuItem aboutItem;
	private javax.swing.JMenuItem chordViewerItem;
	private javax.swing.JMenuItem exitItem;
	private javax.swing.JMenuItem helpContentsItem;
	private javax.swing.JLabel jLabel1;
	private javax.swing.JLabel jLabel2;
	private javax.swing.JLabel jLabel3;
	private javax.swing.JLayeredPane jLayeredPane1;
	private javax.swing.JMenuBar jMenuBar;
	private javax.swing.JMenu jMenuFile;
	private javax.swing.JMenu jMenuHelp;
	private javax.swing.JPanel jPanelCLI;
	private javax.swing.JPanel jPanelStats;
	private javax.swing.JScrollPane jScrollPaneCLI;
	private javax.swing.JScrollPane jScrollPaneDownL;
	private javax.swing.JScrollPane jScrollPaneDownR;
	private javax.swing.JScrollPane jScrollPaneUpL;
	private javax.swing.JScrollPane jScrollPaneUpR;
	private javax.swing.JPopupMenu.Separator jSeparator1;
	private javax.swing.JPopupMenu.Separator jSeparator2;
	private javax.swing.JPopupMenu.Separator jSeparator3;
	private javax.swing.JTabbedPane jTabbedPane;
	private javax.swing.JTextArea jTextAreaCLI;
	private static javax.swing.JTextArea jTextAreaDownL;
	private static javax.swing.JTextArea jTextAreaDownR;
	private static javax.swing.JTextArea jTextAreaUpL;
	private static javax.swing.JTextArea jTextAreaUpR;
	private javax.swing.JTextField jTextField;
	private javax.swing.JTextField jTextField1;
	private javax.swing.JTextField jTextField2;
	private javax.swing.JTextField jTextField3;
	private javax.swing.JMenuItem nodeViewerItem;
	private javax.swing.JMenuItem saveAsItem;
	// End of variables declaration//GEN-END:variables
}
